/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as BlogRouteImport } from './routes/blog'
import { Route as AboutRouteImport } from './routes/about'
import { Route as BackofficeRouteImport } from './routes/_backoffice'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as BackofficeManagementIndexRouteImport } from './routes/_backoffice/management/index'
import { Route as BackofficeManagementUsersIndexRouteImport } from './routes/_backoffice/management/users/index'

const BlogRoute = BlogRouteImport.update({
  id: '/blog',
  path: '/blog',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const BackofficeRoute = BackofficeRouteImport.update({
  id: '/_backoffice',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)
const BackofficeManagementIndexRoute =
  BackofficeManagementIndexRouteImport.update({
    id: '/management/',
    path: '/management/',
    getParentRoute: () => BackofficeRoute,
  } as any)
const BackofficeManagementUsersIndexRoute =
  BackofficeManagementUsersIndexRouteImport.update({
    id: '/management/users/',
    path: '/management/users/',
    getParentRoute: () => BackofficeRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/blog': typeof BlogRoute
  '/login': typeof AuthLoginRoute
  '/management': typeof BackofficeManagementIndexRoute
  '/management/users': typeof BackofficeManagementUsersIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/blog': typeof BlogRoute
  '/login': typeof AuthLoginRoute
  '/management': typeof BackofficeManagementIndexRoute
  '/management/users': typeof BackofficeManagementUsersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_backoffice': typeof BackofficeRouteWithChildren
  '/about': typeof AboutRoute
  '/blog': typeof BlogRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_backoffice/management/': typeof BackofficeManagementIndexRoute
  '/_backoffice/management/users/': typeof BackofficeManagementUsersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/blog'
    | '/login'
    | '/management'
    | '/management/users'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/blog' | '/login' | '/management' | '/management/users'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_backoffice'
    | '/about'
    | '/blog'
    | '/_auth/login'
    | '/_backoffice/management/'
    | '/_backoffice/management/users/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  BackofficeRoute: typeof BackofficeRouteWithChildren
  AboutRoute: typeof AboutRoute
  BlogRoute: typeof BlogRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/blog': {
      id: '/blog'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_backoffice': {
      id: '/_backoffice'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof BackofficeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_backoffice/management/': {
      id: '/_backoffice/management/'
      path: '/management'
      fullPath: '/management'
      preLoaderRoute: typeof BackofficeManagementIndexRouteImport
      parentRoute: typeof BackofficeRoute
    }
    '/_backoffice/management/users/': {
      id: '/_backoffice/management/users/'
      path: '/management/users'
      fullPath: '/management/users'
      preLoaderRoute: typeof BackofficeManagementUsersIndexRouteImport
      parentRoute: typeof BackofficeRoute
    }
  }
}

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface BackofficeRouteChildren {
  BackofficeManagementIndexRoute: typeof BackofficeManagementIndexRoute
  BackofficeManagementUsersIndexRoute: typeof BackofficeManagementUsersIndexRoute
}

const BackofficeRouteChildren: BackofficeRouteChildren = {
  BackofficeManagementIndexRoute: BackofficeManagementIndexRoute,
  BackofficeManagementUsersIndexRoute: BackofficeManagementUsersIndexRoute,
}

const BackofficeRouteWithChildren = BackofficeRoute._addFileChildren(
  BackofficeRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  BackofficeRoute: BackofficeRouteWithChildren,
  AboutRoute: AboutRoute,
  BlogRoute: BlogRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
