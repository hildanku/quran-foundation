version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment: 
      POSTGRES_USER: quran_foundation
      POSTGRES_DB: quran_foundation
      POSTGRES_PASSWORD: ${DB_PASSWORD:-quran_foundation}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./drizzle:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quran_foundation -d quran_foundation"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    restart: unless-stopped
    environment:
      - PORT=3000
      - NODE_ENV=production
      - DATABASE_URL=postgresql://quran_foundation:${DB_PASSWORD:-quran_foundation}@db:5432/quran_foundation
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - QF_OAUTH_BASE_URL=${QF_OAUTH_BASE_URL}
      - QF_API_BASE_URL=${QF_API_BASE_URL}
      - QF_CLIENT_ID=${QF_CLIENT_ID}
      - QF_CLIENT_SECRET=${QF_CLIENT_SECRET}
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - ACCESS_TOKEN_EXPIRES_IN=${ACCESS_TOKEN_EXPIRES_IN}
      - REFRESH_TOKEN_EXPIRES_IN=${REFRESH_TOKEN_EXPIRES_IN}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - uploads:/app/uploads
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/v1/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  # Frontend with Nginx
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

volumes:
  pgdata:
  uploads:

networks:
  app-network:
    driver: bridge